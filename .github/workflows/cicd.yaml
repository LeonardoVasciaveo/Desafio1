name: CI/CD Pipeline Nginx Demo

on:
  push:
    branches:
      - main
    paths:
      - 'charts/nginx-demo/**'
      - '.github/workflows/cicd.yaml'

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: eks-ecommerce-prod
  KUBE_NAMESPACE: demo
  ARGOCD_APP_NAME: nginx-demo

jobs:
  gitops-deploy:
    name: GitOps Deploy Nginx Demo
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar kubectl para EKS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Atualizar metadata de deploy no values.yaml
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          yq eval -i '.deploy.timestamp = strenv(DATE)' charts/nginx-demo/values.yaml
          yq eval -i '.deploy.commit = "${{ github.sha }}"' charts/nginx-demo/values.yaml
          git add charts/nginx-demo/values.yaml
          git commit -m "[CI] Atualiza metadata de deploy do Nginx demo"
          git push

      - name: Verificar status no ArgoCD
        run: |
          kubectl wait --for=condition=healthy application/${{ env.ARGOCD_APP_NAME }} \
            -n argocd \
            --timeout=300s

      - name: Notificação no Slack
        uses: slackapi/slack-github-action@v1
        if: always()
        with:
          channel-id: 'deployments'
          slack-message: |
            Deploy ${{ job.status }}:
            *App*: ${{ env.ARGOCD_APP_NAME }}
            *Commit*: ${{ github.sha }}
            *Cluster*: ${{ env.CLUSTER_NAME }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}